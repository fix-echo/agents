Here's the Python program to calculate the first 10,000 terms of the series, multiplying the total by 4, along with its output:

```python
def calculate_series_sum(n_terms):
    total = 0
    for i in range(n_terms):
        term = 1 / (2 * i + 1)
        if i % 2 == 0:
            total += term
        else:
            total -= term
    return total * 4

result = calculate_series_sum(10000)
print(f"The result of the series with 10,000 terms, multiplied by 4, is: {result}")
print(f"The result rounded to 10 decimal places is: {result:.10f}")
```

Output:
```
The result of the series with 10,000 terms, multiplied by 4, is: 3.1414926535900345
The result rounded to 10 decimal places is: 3.1414926536
```

This program calculates the sum of the first 10,000 terms of the series 1 - 1/3 + 1/5 - 1/7 + ..., multiplies the result by 4, and prints both the full result and the result rounded to 10 decimal places. The result is approximately 3.1414926536, which is very close to the value of π (pi). In fact, this series is known as the Leibniz formula for π, and as the number of terms approaches infinity, the result converges to π.